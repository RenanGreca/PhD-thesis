%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for Renan Greca at 2022-12-01 10:45:43 +0100 


%% Saved with string encoding Unicode (UTF-8) 

@inproceedings{rossi2020defensive_p,
  title={Defensive Programming for Smart Home Cybersecurity},
  author={Rossi, Maria Teresa and Greca, Renan and Iovino, Ludovico and Giacinto, Giorgio and Bertolino, Antonia},
  booktitle={2020 IEEE European Symposium on Security and Privacy Workshops (EuroS\&PW)},
  pages={600--605},
  year={2020},
  organization={IEEE}
}

@unpublished{greca_live_2022_p,
	author = {Greca, Renan and Miranda, Breno and Bertolino, Antonia},
	date-added = {2022-12-01 10:44:18 +0100},
	date-modified = {2022-12-01 10:45:24 +0100},
	journal = {ACM Computing Surveys},
	title = {State of Practical Applicability of Regression Testing Research: A Live Systematic Literature Review},
	journal={ACM Computing Surveys (CSUR)},
	note = "Note: currently in pre-print; recommended for publication in November/2022"}

@inproceedings{greca_comparing_2022_p,
	abstract = {Test case selection (TCS) and test case prioritization (TCP) techniques can reduce time to detect the first test failure. Although these techniques have been extensively studied in combination and isolation, they have not been compared one against the other. In this paper, we perform an empirical study directly comparing TCS and TCP approaches, represented by the tools Ekstazi and FAST, respectively. Furthermore, we develop the first combination, named Fastazi, of file-based TCS and similarity-based TCP and evaluate its benefit and cost against each individual technique. We performed our experiments using 12 Java-based open-source projects. Our results show that, in the median case, the combined approach detects the first failure nearly two times faster than either Ekstazi alone (with random test ordering) or FAST alone (without TCS). Statistical analysis shows that the effectiveness of Fastazi is higher than that of Ekstazi, which in turn is higher than that of FAST. On the other hand, FAST adds the least overhead to testing time, while the difference between the additional time needed by Ekstazi and Fastazi is negligible. Fastazi can also improve failure detection in scenarios where the time available for testing is restricted.},
	address = {Pittsburgh Pennsylvania},
	author = {Greca, Renan and Miranda, Breno and Gligoric, Milos and Bertolino, Antonia},
	booktitle = {Proceedings of the 3rd {ACM}/{IEEE} {International} {Conference} on {Automation} of {Software} {Test}},
	date-modified = {2022-12-01 10:41:53 +0100},
	doi = {10.1145/3524481.3527223},
	file = {2022 Comparing and combining file-based selection and similarity-based.pdf:/Users/renangreca/Zotero/storage/Z5QL8CYY/2022 Comparing and combining file-based selection and similarity-based.pdf:application/pdf},
	isbn = {978-1-4503-9286-0},
	keywords = {\_tablet},
	language = {en},
	month = may,
	pages = {115--125},
	publisher = {ACM},
	title = {Comparing and combining file-based selection and similarity-based prioritization towards regression test orchestration},
	url = {https://dl.acm.org/doi/10.1145/3524481.3527223},
	urldate = {2022-09-14},
	year = {2022},
	bdsk-url-1 = {https://dl.acm.org/doi/10.1145/3524481.3527223},
	bdsk-url-2 = {https://doi.org/10.1145/3524481.3527223}}
